
// Container clear fix for floats
@mixin clear-fix {
    &:after {
        content: "";
        display: block;
        height: 0;
        line-height: 0;
        clear: both;
        visibility: hidden;
    }
}

// Reset an inline-block element to defaults
@mixin reset-inline-block {
    display: inline-block;
    border: 0;
    margin: 0;
    padding: 0;
    position: relative;
    text-decoration: none;
    vertical-align: middle;
}

// Remove the top and bottom margin from content elements
// Allows for perfect spacing within content blocks
@mixin content-spacing {
    p, ul, ol, hr, blockquote {
        &:first-child { margin-top: 0; }
        &:last-child { margin-bottom: 0; }
    }
}

//-------------------- Sizes --------------------//

@mixin size-small {
    font-size: $small-size;
    padding: $small-padding;
}

@mixin size-medium {
    font-size: $medium-size;
    padding: $medium-padding;
}

@mixin size-large {
    font-size: $large-size;
    padding: $large-padding;
}

//-------------------- States --------------------//

// Contains active styles (on self or inherited from parent)
@mixin active-state {
    .is-active > &,
    .is-active > li > &,
    &.is-active,
    &.is-active:hover { @content; }
}

// Contains disabled styles (on self or inherited from parent)
@mixin disabled-state {
    .is-disabled > &,
    .is-disabled > li > &,
    &.is-disabled,
    &.is-disabled:hover,
    &[disabled],
    &[disabled]:hover { @content; }
}

//-------------------- Helpers --------------------//

@function black($opacity){
    @return rgba(0, 0, 0, $opacity);
}

@function white($opacity){
    @return rgba(255, 255, 255, $opacity);
}

//-------------------- Conversions --------------------//

// Remove the unit and return the integer
@function strip-unit($value) {
    @return ($value / ($value * 0 + 1));
}

// Convert a unit value to a percentage while using $base-size as the reference
@function to-percent($from) {
    $from-unit: unit($from);
    $value: $from;

    @if $from-unit == '%' {
        @return $from;

    } @else if $from-unit == 'px' {
        // Do nothing

    } @else if $from-unit == 'em' or $from-unit == 'rem' {
        $value: (strip-unit($from) * strip-unit($base-size)) * 1px;

    } @else {
        @warn 'Unknown conversion unit type.';
    }

    @return percentage(($value / $base-size) / 100);
}